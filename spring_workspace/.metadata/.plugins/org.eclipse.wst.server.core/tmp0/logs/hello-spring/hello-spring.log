[2021-04-26 09:27:19]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:27:23]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3301 ms
[2021-04-26 09:27:23]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:27:24]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: puiblic
[2021-04-26 09:27:24]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: puiblic
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.NoClassDefFoundError: puiblic
	at java.base/java.lang.Class.getDeclaredFields0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredFields(Class.java:3220)
	at java.base/java.lang.Class.getDeclaredFields(Class.java:2341)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.compiledByAjc(AbstractAspectJAdvisorFactory.java:95)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.isAspect(AbstractAspectJAdvisorFactory.java:80)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:104)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 26 more
Caused by: java.lang.ClassNotFoundException: puiblic
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1358)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)
	... 38 more
[2021-04-26 09:27:24]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:27:25]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: puiblic
[2021-04-26 09:27:25]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: puiblic
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.NoClassDefFoundError: puiblic
	at java.base/java.lang.Class.getDeclaredFields0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredFields(Class.java:3220)
	at java.base/java.lang.Class.getDeclaredFields(Class.java:2341)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.compiledByAjc(AbstractAspectJAdvisorFactory.java:95)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.isAspect(AbstractAspectJAdvisorFactory.java:80)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:104)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 34 more
Caused by: java.lang.ClassNotFoundException: puiblic
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1358)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)
	... 46 more
[2021-04-26 09:29:11]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:29:15]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3244 ms
[2021-04-26 09:29:15]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:29:19]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4286 ms
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:29:19]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-26 09:29:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/css/style.css
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/images/logo-spring.png
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:29:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:29:24]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:29:24]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:29:25]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021)]
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021)]}]
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:29:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:29:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:29:53]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:29:56]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3012 ms
[2021-04-26 09:29:56]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:30:01]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4250 ms
[2021-04-26 09:30:36]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:30:38]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2757 ms
[2021-04-26 09:30:38]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:30:42]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 3781 ms
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:30:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.RuntimeCheckAspect.aroundAdvice(RuntimeCheckAspect.java:30) - memoEnroll 소요시간 1119 ms
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:30:51]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021), Memo(no=21, memo=하위, password=1234, regDate=Mon Apr 26 09:30:51 KST 2021)]
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021), Memo(no=21, memo=하위, password=1234, regDate=Mon Apr 26 09:30:51 KST 2021)]}]
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:30:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:32:07]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:32:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2911 ms
[2021-04-26 09:32:10]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:32:14]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4070 ms
[2021-04-26 09:32:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:32:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-26 09:32:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:66) - memo = Memo(no=0, memo=소여니, password=135, regDate=null)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:32:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.RuntimeCheckAspect.aroundAdvice(RuntimeCheckAspect.java:30) - memoEnroll 소요시간 1001 ms
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:48) - proxy = class com.sun.proxy.$Proxy43
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-26 09:32:16]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:52) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021), Memo(no=21, memo=하위, password=1234, regDate=Mon Apr 26 09:30:51 KST 2021), Memo(no=22, memo=소여니, password=135 , regDate=Mon Apr 26 09:32:16 KST 2021)]
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021), Memo(no=21, memo=하위, password=1234, regDate=Mon Apr 26 09:30:51 KST 2021), Memo(no=22, memo=소여니, password=135 , regDate=Mon Apr 26 09:32:16 KST 2021)]}]
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:32:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:43:20]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:43:23]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3151 ms
[2021-04-26 09:43:23]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:43:25]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
[2021-04-26 09:43:25]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:201)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAnnotation(AbstractAspectJAdvisorFactory.java:146)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAspectJAnnotationOnMethod(AbstractAspectJAdvisorFactory.java:134)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.lambda$static$0(ReflectiveAspectJAdvisorFactory.java:80)
	at org.springframework.core.convert.converter.ConvertingComparator.compare(ConvertingComparator.java:80)
	at java.base/java.util.Comparator.lambda$thenComparing$36697e65$1(Comparator.java:216)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.base/java.util.TimSort.sort(TimSort.java:220)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisorMethods(ReflectiveAspectJAdvisorFactory.java:157)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:125)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 26 more
Caused by: java.lang.IllegalStateException: Failed to resolve expression: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="")
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.resolveExpression(AbstractAspectJAdvisorFactory.java:223)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:196)
	... 44 more
[2021-04-26 09:43:25]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:43:25]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
[2021-04-26 09:43:25]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:201)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAnnotation(AbstractAspectJAdvisorFactory.java:146)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAspectJAnnotationOnMethod(AbstractAspectJAdvisorFactory.java:134)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.lambda$static$0(ReflectiveAspectJAdvisorFactory.java:80)
	at org.springframework.core.convert.converter.ConvertingComparator.compare(ConvertingComparator.java:80)
	at java.base/java.util.Comparator.lambda$thenComparing$36697e65$1(Comparator.java:216)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.base/java.util.TimSort.sort(TimSort.java:220)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisorMethods(ReflectiveAspectJAdvisorFactory.java:157)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:125)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 34 more
Caused by: java.lang.IllegalStateException: Failed to resolve expression: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="")
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.resolveExpression(AbstractAspectJAdvisorFactory.java:223)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:196)
	... 52 more
[2021-04-26 09:43:29]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:43:29]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
[2021-04-26 09:43:29]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:201)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAnnotation(AbstractAspectJAdvisorFactory.java:146)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAspectJAnnotationOnMethod(AbstractAspectJAdvisorFactory.java:134)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.lambda$static$0(ReflectiveAspectJAdvisorFactory.java:80)
	at org.springframework.core.convert.converter.ConvertingComparator.compare(ConvertingComparator.java:80)
	at java.base/java.util.Comparator.lambda$thenComparing$36697e65$1(Comparator.java:216)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.base/java.util.TimSort.sort(TimSort.java:220)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisorMethods(ReflectiveAspectJAdvisorFactory.java:157)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:125)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 34 more
Caused by: java.lang.IllegalStateException: Failed to resolve expression: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="")
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.resolveExpression(AbstractAspectJAdvisorFactory.java:223)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:196)
	... 52 more
[2021-04-26 09:44:33]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:44:34]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
[2021-04-26 09:44:34]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="") is not a valid AspectJ annotation
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:201)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAnnotation(AbstractAspectJAdvisorFactory.java:146)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.findAspectJAnnotationOnMethod(AbstractAspectJAdvisorFactory.java:134)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.lambda$static$0(ReflectiveAspectJAdvisorFactory.java:80)
	at org.springframework.core.convert.converter.ConvertingComparator.compare(ConvertingComparator.java:80)
	at java.base/java.util.Comparator.lambda$thenComparing$36697e65$1(Comparator.java:216)
	at java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.base/java.util.TimSort.sort(TimSort.java:220)
	at java.base/java.util.Arrays.sort(Arrays.java:1306)
	at java.base/java.util.ArrayList.sort(ArrayList.java:1721)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisorMethods(ReflectiveAspectJAdvisorFactory.java:157)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvisors(ReflectiveAspectJAdvisorFactory.java:125)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:110)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 34 more
Caused by: java.lang.IllegalStateException: Failed to resolve expression: @org.aspectj.lang.annotation.AfterReturning(pointcut="", value="", argNames="", returning="")
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.resolveExpression(AbstractAspectJAdvisorFactory.java:223)
	at org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory$AspectJAnnotation.<init>(AbstractAspectJAdvisorFactory.java:196)
	... 52 more
[2021-04-26 09:46:03]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:46:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3075 ms
[2021-04-26 09:46:07]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:46:11]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4343 ms
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:46:11]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:46:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:46:13]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:21) - returnObj = ModelAndView [view="member/login"; model={test=hello world}]
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:46:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:46:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:46:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 09:46:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:46:18]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-26 09:46:18]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:150) - id = admin, password = 1234
[2021-04-26 09:46:19]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:153) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-26 09:46:19]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - encodedPassword = $2a$10$WcbZiYtL5S4/MfEegBGrLOFCmxjgSNtG64RK0ot2k0nvRrCmaiG3O
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:21) - returnObj = redirect:/
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:46:19]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:46:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:49:50]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 09:49:53]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3302 ms
[2021-04-26 09:49:53]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 09:49:58]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4496 ms
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/logout.do
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:49:58]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인 후 이용하세요.}]
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:49:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:50:01]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:21) - returnObj = ModelAndView [view="member/login"; model={test=hello world}]
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 09:50:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 09:50:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 09:50:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 09:50:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 09:50:06]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-26 09:50:06]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:150) - id = admin, password = 1234
[2021-04-26 09:50:07]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:153) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-26 09:50:07]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - encodedPassword = $2a$10$DmBJCFWDCcrjTnDtALC2XufgROkHVWeD1Cwi3kVmvZcpypvIyA6cq
[2021-04-26 09:50:07]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:21) - returnObj = ModelAndView [view="redirect:/"; model={loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)}]
[2021-04-26 09:50:07]WARN : org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.logException(AbstractHandlerExceptionResolver.java:197) - Resolved [org.springframework.beans.ConversionNotSupportedException: Failed to convert value of type 'com.kh.spring.member.model.vo.Member' to required type 'java.lang.String'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'com.kh.spring.member.model.vo.Member' to required type 'java.lang.String': no matching editors or conversion strategy found]
[2021-04-26 09:50:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:08:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 10:08:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3201 ms
[2021-04-26 10:08:10]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 10:08:15]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4724 ms
[2021-04-26 10:08:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:08:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 10:08:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:08:15]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:79) - @ModelAttribute - common 실행!
[2021-04-26 10:08:15]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - id = admin, password = 1234
[2021-04-26 10:08:16]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:157) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-26 10:08:16]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:158) - encodedPassword = $2a$10$AVdeLywXWm4L2g9WXI0xuOOm6qmBkWeG.y3c.isYDpN96Y0RIGxAS
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:21) - returnObj = ModelAndView [view="redirect:/"; model={loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)}]
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="redirect:/"; model={loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:08:16]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-26 10:08:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:08:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:16:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-26 10:16:13]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3114 ms
[2021-04-26 10:16:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-26 10:16:17]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4271 ms
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/logout.do
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:16:18]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인 후 이용하세요.}]
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:16:20]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:79) - @ModelAttribute - common 실행!
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:26) - returnObj = ModelAndView [view="member/login"; model={test=hello world}]
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:16:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:16:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:16:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-26 10:16:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:16:24]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:79) - @ModelAttribute - common 실행!
[2021-04-26 10:16:24]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - id = admin, password = 1234
[2021-04-26 10:16:25]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:157) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-26 10:16:25]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:158) - encodedPassword = $2a$10$nFa/lqYDd4iYniBRjhO.yutsWEzGa59pGvO.umCxI940jxePMoZS.
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:26) - returnObj = ModelAndView [view="redirect:/"; model={loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)}]
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.aop.LoginLoggerAspect.advice(LoginLoggerAspect.java:32) - 관리자[admin]님이 로그인했습니다.
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="redirect:/"; model={loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-26 10:16:25]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-26 10:16:25]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

