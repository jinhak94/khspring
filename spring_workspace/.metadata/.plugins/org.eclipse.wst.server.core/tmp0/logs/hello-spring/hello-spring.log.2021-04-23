[2021-04-23 09:14:48]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:14:51]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2889 ms
[2021-04-23 09:14:51]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 09:14:53]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
[2021-04-23 09:14:53]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:686)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:583)
	at org.springframework.core.MethodIntrospector.selectMethods(MethodIntrospector.java:72)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:252)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:211)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:199)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 28 more
Caused by: java.lang.NoClassDefFoundError: ModelMap
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3325)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2466)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:668)
	... 37 more
Caused by: java.lang.ClassNotFoundException: ModelMap
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1358)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)
	... 41 more
[2021-04-23 09:15:09]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 09:15:09]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
[2021-04-23 09:15:09]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [com.kh.spring.member.controller.MemberController] from ClassLoader [ParallelWebappClassLoader
  context: spring
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@7c0e2abd
]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:686)
	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:583)
	at org.springframework.core.MethodIntrospector.selectMethods(MethodIntrospector.java:72)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:267)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:252)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:211)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:199)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 36 more
Caused by: java.lang.NoClassDefFoundError: ModelMap
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3325)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2466)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:668)
	... 45 more
Caused by: java.lang.ClassNotFoundException: ModelMap
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1358)
	at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1180)
	... 49 more
[2021-04-23 09:18:25]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:18:29]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3052 ms
[2021-04-23 09:18:29]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 09:18:31]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2394 ms
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:31]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 09:18:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/css/style.css
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/images/logo-spring.png
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:35]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-23 09:18:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:36]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 09:18:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:40]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:18:40]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:150) - id = admin, password = 1234
[2021-04-23 09:18:41]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:153) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 09:18:41]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - encodedPassword = $2a$10$hNzXdi.fsVmJIP1KlnFFhuFEODVzHTUM5L7R57/eA.30qM.GALEHO
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:41]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:18:45]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:18:45]INFO : com.kh.spring.member.controller.MemberController.memberDetail(MemberController.java:199) - loginMember = Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/memberDetail"; model={common={adminEmail=admin@spring.kh.com}, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors, modelAndView=ModelAndView [view="member/memberDetail"; model={}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:18:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:29:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:29:07]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
[2021-04-23 09:29:07]ERROR: org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:312) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:676)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4689)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5155)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 26 more
[2021-04-23 09:30:07]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:30:09]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
[2021-04-23 09:30:09]ERROR: org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:312) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:676)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4689)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5155)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 26 more
[2021-04-23 09:30:55]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:30:57]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
[2021-04-23 09:30:57]ERROR: org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:312) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Cannot resolve reference to bean 'realDataSource' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:676)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4689)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5155)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'realDataSource' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 26 more
[2021-04-23 09:37:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 09:37:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2978 ms
[2021-04-23 09:37:10]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 09:37:12]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2230 ms
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:37:15]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 09:37:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:37:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:37:23]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:37:23]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/devList.do
[2021-04-23 09:37:23]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:37:24]INFO : com.kh.spring.demo.controller.DemoController.devList(DemoController.java:145) - list = [Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]
[2021-04-23 09:37:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:37:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="demo/devList"; model={list=[Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]}]
[2021-04-23 09:37:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:37:24]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/devForm.do
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="demo/devForm"; model={}]
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:37:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/insertDev.do
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:37:50]INFO : com.kh.spring.demo.controller.DemoController.insertDev(DemoController.java:129) - Dev(no=0, name=Jinha Kim, career=5, email=jina@naver.com, gender=M, lang=[C])
[2021-04-23 09:37:50]INFO : com.kh.spring.demo.controller.DemoController.insertDev(DemoController.java:134) - 처리결과 : Dev 등록 성공!
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:37:50]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=Dev 등록 성공!}]
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:37:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:28]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:38:31]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:150) - id = admin, password = 1234
[2021-04-23 09:38:31]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:153) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 09:38:31]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - encodedPassword = $2a$10$9QPTYR8pov6fYFjWBVQvU./yqr0wnGV1YKAH78gjGe2B0ITE5oY8a
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:31]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:34]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:38:34]INFO : com.kh.spring.member.controller.MemberController.memberDetail(MemberController.java:199) - loginMember = Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/memberDetail"; model={common={adminEmail=admin@spring.kh.com}, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=1990-12-25, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors, modelAndView=ModelAndView [view="member/memberDetail"; model={}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-23 09:38:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberUpdate.do
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:38:42]DEBUG: com.kh.spring.member.controller.MemberController.memberUpdate(MemberController.java:207) - member = Member(id=admin, password=null, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=null, enabled=false) 
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:42]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=회원정보수정성공!}]
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 09:38:45]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 09:38:45]INFO : com.kh.spring.member.controller.MemberController.memberDetail(MemberController.java:199) - loginMember = Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/memberDetail"; model={common={adminEmail=admin@spring.kh.com}, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors, modelAndView=ModelAndView [view="member/memberDetail"; model={}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 09:38:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:16:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:16:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 10:16:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:16:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:21:53]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:21:56]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3271 ms
[2021-04-23 10:21:56]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:21:58]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2219 ms
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:21:59]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 10:21:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/css/style.css
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/images/logo-spring.png
[2021-04-23 10:22:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:22:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:22:04]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:22:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:22:06]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:22:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:22:08]WARN : org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1248) - No mapping for GET /spring/memo/memo.do
[2021-04-23 10:24:44]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:24:47]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2815 ms
[2021-04-23 10:24:47]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:24:49]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2259 ms
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={}]
[2021-04-23 10:24:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:24:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:39:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:39:12]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactoryBean' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for member.memberMap
[2021-04-23 10:39:12]ERROR: org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:312) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactoryBean' defined in ServletContext resource [/WEB-INF/spring/application-context.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for member.memberMap
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:400)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:291)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:103)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4689)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5155)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for member.memberMap
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 21 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [C:\Workspaces\spring_workspace\hello-spring\target\classes\mapper\memo\memo-mapper.xml]'. Cause: java.lang.IllegalArgumentException: Result Maps collection already contains value for member.memberMap
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 24 more
Caused by: java.lang.IllegalArgumentException: Result Maps collection already contains value for member.memberMap
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:872)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:844)
	at org.apache.ibatis.session.Configuration.addResultMap(Configuration.java:626)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addResultMap(MapperBuilderAssistant.java:214)
	at org.apache.ibatis.builder.ResultMapResolver.resolve(ResultMapResolver.java:47)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:285)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 26 more
[2021-04-23 10:39:38]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:39:41]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3160 ms
[2021-04-23 10:39:41]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:39:43]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2188 ms
[2021-04-23 10:39:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:39:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:39:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:39:43]ERROR: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:30) - nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.selectMemoList(MemoDaoImpl.java:19)
	at com.kh.spring.memo.model.service.MemoServiceImpl.selectMemoList(MemoServiceImpl.java:20)
	at com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:888)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:721)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:714)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 55 more
[2021-04-23 10:39:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:41:03]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:41:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2897 ms
[2021-04-23 10:41:06]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:41:08]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 1997 ms
[2021-04-23 10:41:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:41:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:41:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:41:11]ERROR: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:30) - nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.selectMemoList(MemoDaoImpl.java:19)
	at com.kh.spring.memo.model.service.MemoServiceImpl.selectMemoList(MemoServiceImpl.java:20)
	at com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:888)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:721)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:714)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 55 more
[2021-04-23 10:41:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:41:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:41:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:41:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:41:13]ERROR: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:30) - nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.selectMemoList(MemoDaoImpl.java:19)
	at com.kh.spring.memo.model.service.MemoServiceImpl.selectMemoList(MemoServiceImpl.java:20)
	at com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:888)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:721)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:714)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 55 more
[2021-04-23 10:41:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:41:15]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:41:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:41:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:41:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:41:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:41:20]ERROR: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:30) - nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:222)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.selectMemoList(MemoDaoImpl.java:19)
	at com.kh.spring.memo.model.service.MemoServiceImpl.selectMemoList(MemoServiceImpl.java:20)
	at com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
### Cause: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:136)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for memo.selectMemoList
	at org.apache.ibatis.session.Configuration$StrictMap.get(Configuration.java:888)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:721)
	at org.apache.ibatis.session.Configuration.getMappedStatement(Configuration.java:714)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	... 55 more
[2021-04-23 10:41:20]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:42:36]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:42:39]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2905 ms
[2021-04-23 10:42:39]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:42:41]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2226 ms
[2021-04-23 10:42:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:42:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:42:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:42:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:42:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={}]
[2021-04-23 10:42:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:42:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:46:45]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:46:49]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3004 ms
[2021-04-23 10:46:49]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:46:51]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2278 ms
[2021-04-23 10:46:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:46:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:46:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:46:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:46:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:46:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:46:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:47:00]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:47:03]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3037 ms
[2021-04-23 10:47:03]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:47:05]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2384 ms
[2021-04-23 10:47:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:47:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:47:06]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:47:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:47:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:47:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:47:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:47:46]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:47:49]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3029 ms
[2021-04-23 10:47:49]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:47:51]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2255 ms
[2021-04-23 10:47:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:47:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:47:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:47:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:47:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:47:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:47:54]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:56:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:56:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3049 ms
[2021-04-23 10:56:10]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:56:12]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2387 ms
[2021-04-23 10:56:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:56:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:56:14]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:56:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:56:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:56:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:56:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:56:21]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:56:21]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:56:21]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:56:21]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:45) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 10:56:21]ERROR: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:59) - Cannot invoke "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(java.lang.CharSequence)" because "this.bcryptPasswordEncoder" is null
java.lang.NullPointerException: Cannot invoke "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(java.lang.CharSequence)" because "this.bcryptPasswordEncoder" is null
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 10:56:21]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:57:02]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:57:05]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3062 ms
[2021-04-23 10:57:06]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:57:08]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2354 ms
[2021-04-23 10:57:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:57:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:57:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:57:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:57:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:57:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:57:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:57:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:57:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:57:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:57:12]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 10:57:12]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:120) - 2. PreparedStatement.execute() insert into
			memo
		values(
			0,
			'하위',
			'$2a$10$k/5.gfdzMIlnNrItzjH9ju8COaloZ6SN3g3gqbmG5ydPp6I2.c04y',
			NULL
		)
java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 10:57:12]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:139) - 2. PreparedStatement.execute() FAILED! insert into
			memo
		values(
			0,
			'하위',
			'$2a$10$k/5.gfdzMIlnNrItzjH9ju8COaloZ6SN3g3gqbmG5ydPp6I2.c04y',
			NULL
		) {FAILED after 17 msec}
java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 10:57:12]ERROR: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:61) - 
### Error updating database.  Cause: java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    ?,    ?,    ?,    ?   )
### Cause: java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

; uncategorized SQLException; SQL state [72000]; error code [12899]; ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)
; nested exception is java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    ?,    ?,    ?,    ?   )
### Cause: java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

; uncategorized SQLException; SQL state [72000]; error code [12899]; ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)
; nested exception is java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLException: ORA-12899: value too large for column "SPRING"."MEMO"."PASSWORD" (actual: 60, maximum: 4)

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
[2021-04-23 10:57:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:58:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:58:13]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2998 ms
[2021-04-23 10:58:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:58:16]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2174 ms
[2021-04-23 10:58:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:58:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:58:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:58:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:58:22]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:58:22]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:58:22]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:58:22]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:58:55]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:58:58]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3158 ms
[2021-04-23 10:58:58]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:59:00]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2331 ms
[2021-04-23 10:59:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:59:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:59:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:59:02]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:59:02]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 10:59:02]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:59:02]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:59:04]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo"; model={}]
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:59:04]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:59:04]WARN : org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1248) - No mapping for GET /spring/memo/memo
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:59:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:59:47]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 10:59:50]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2891 ms
[2021-04-23 10:59:50]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 10:59:52]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2183 ms
[2021-04-23 10:59:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:59:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 10:59:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 10:59:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 10:59:54]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 10:59:54]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 10:59:54]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 10:59:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 10:59:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 10:59:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:00:00]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 11:00:00]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:120) - 2. PreparedStatement.execute() insert into
			memo
		values(
			0,
			'하위',
			'1234',
			default
		)
java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:00:00]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:139) - 2. PreparedStatement.execute() FAILED! insert into
			memo
		values(
			0,
			'하위',
			'1234',
			default
		) {FAILED after 24 msec}
java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:00:00]ERROR: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:53) - 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    ?,    ?,    ?,    default   )
### Cause: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

; ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    ?,    ?,    ?,    default   )
### Cause: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

; ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated
; nested exception is java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLIntegrityConstraintViolationException: ORA-00001: unique constraint (SPRING.PK_MEMO_NO) violated

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
[2021-04-23 11:00:00]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:00:33]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:00:36]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2981 ms
[2021-04-23 11:00:36]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:00:39]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2230 ms
[2021-04-23 11:00:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:00:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:00:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:00:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:00:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 11:00:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:00:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:00:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:00:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 11:00:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:00:43]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 11:00:43]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:120) - 2. PreparedStatement.execute() insert into
			memo
		values(
			seq_memo.nextval,
			'하위',
			'1234',
			default
		)
java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:00:43]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:139) - 2. PreparedStatement.execute() FAILED! insert into
			memo
		values(
			seq_memo.nextval,
			'하위',
			'1234',
			default
		) {FAILED after 16 msec}
java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:00:43]ERROR: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:53) - 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    seq_memo.nextval,    ?,    ?,    default   )
### Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    seq_memo.nextval,    ?,    ?,    default   )
### Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
[2021-04-23 11:00:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:01:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:01:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 11:01:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:01:43]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 11:01:43]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:120) - 4. PreparedStatement.execute() insert into
			memo
		values(
			seq_memo.nextval,
			'하위',
			'1234',
			default
		)
java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:01:43]ERROR: net.sf.log4jdbc.Slf4jSpyLogDelegator.exceptionOccured(Slf4jSpyLogDelegator.java:139) - 4. PreparedStatement.execute() FAILED! insert into
			memo
		values(
			seq_memo.nextval,
			'하위',
			'1234',
			default
		) {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
[2021-04-23 11:01:43]ERROR: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:53) - 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    seq_memo.nextval,    ?,    ?,    default   )
### Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: insert into    memo   values(    seq_memo.nextval,    ?,    ?,    default   )
### Cause: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at com.kh.spring.memo.model.dao.MemoDaoImpl.insertMemo(MemoDaoImpl.java:24)
	at com.kh.spring.memo.model.service.MemoServiceImpl.insertMemo(MemoServiceImpl.java:25)
	at com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.sql.SQLSyntaxErrorException: ORA-02289: sequence does not exist

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:440)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:837)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:445)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:191)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:523)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1010)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1315)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3576)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3677)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1374)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:172)
	at net.sf.log4jdbc.PreparedStatementSpy.execute(PreparedStatementSpy.java:418)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 48 more
[2021-04-23 11:01:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:01:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:01:55]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:01:58]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3183 ms
[2021-04-23 11:01:58]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:02:00]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2308 ms
[2021-04-23 11:02:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:02:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:02:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:02:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:02:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 11:02:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:02:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:02:12]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=123, password=1234, regDate=null)
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=0, memo=하위, password=1234, regDate=null)]}]
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:02:12]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:02:48]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:01]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:12:05]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3144 ms
[2021-04-23 11:12:05]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:12:07]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2372 ms
[2021-04-23 11:12:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:12:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:12:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:09]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:10]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:23]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:12:26]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2970 ms
[2021-04-23 11:12:26]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:12:28]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2416 ms
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:12:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021)]}]
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021)]}]
[2021-04-23 11:12:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:30]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:30]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 11:12:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:42]INFO : com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:44) - memo = Memo(no=0, memo=소여니, password=1234, regDate=null)
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:12:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:13:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:13:13]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3171 ms
[2021-04-23 11:13:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:13:16]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2263 ms
[2021-04-23 11:13:27]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:13:27]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:13:27]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:13:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:13:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:13:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:13:28]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:41]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/devList.do
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:45]INFO : com.kh.spring.demo.controller.DemoController.devList(DemoController.java:145) - list = [Dev(no=23, name=Jinha Kim, career=5, email=jina@naver.com, gender=M, lang=[C]), Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="demo/devList"; model={list=[Dev(no=23, name=Jinha Kim, career=5, email=jina@naver.com, gender=M, lang=[C]), Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]}]
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:50]WARN : org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1248) - No mapping for GET /spring/board/boardList.do
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:52]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/login"; model={common={adminEmail=admin@spring.kh.com}, modelAndView=ModelAndView [view="member/login"; model={test=hello world}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors, test=hello world}]
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:52]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:55]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:55]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/login.do
[2021-04-23 11:15:55]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:55]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 11:15:55]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:150) - id = admin, password = 1234
[2021-04-23 11:15:55]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:153) - member - Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 11:15:56]INFO : com.kh.spring.member.controller.MemberController.login(MemberController.java:154) - encodedPassword = $2a$10$w3CbPjAn609xuCoIeL2YC.s/w8H.vbgTW2cL4As6u6YJ4iU0ZLGxS
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/"; model={}]
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:56]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={msg=로그인에 성공하셨습니다.}]
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:15:58]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 11:15:58]INFO : com.kh.spring.member.controller.MemberController.memberDetail(MemberController.java:199) - loginMember = Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/memberDetail"; model={common={adminEmail=admin@spring.kh.com}, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors, modelAndView=ModelAndView [view="member/memberDetail"; model={}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:15:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/devList.do
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:16:07]INFO : com.kh.spring.demo.controller.DemoController.devList(DemoController.java:145) - list = [Dev(no=23, name=Jinha Kim, career=5, email=jina@naver.com, gender=M, lang=[C]), Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="demo/devList"; model={list=[Dev(no=23, name=Jinha Kim, career=5, email=jina@naver.com, gender=M, lang=[C]), Dev(no=22, name=깅지나, career=5, email=honggd1@naver.com, gender=M, lang=[C, Javascript])]}]
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:16:07]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:16:11]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:16:11]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:16:12]WARN : org.springframework.web.servlet.DispatcherServlet.noHandlerFound(DispatcherServlet.java:1248) - No mapping for GET /spring/board/boardList.do
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021)]}]
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:16:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/demo/devForm.do
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="demo/devForm"; model={}]
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:16:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:17:13]DEBUG: com.kh.spring.member.controller.MemberController.common(MemberController.java:76) - @ModelAttribute - common 실행!
[2021-04-23 11:17:13]INFO : com.kh.spring.member.controller.MemberController.memberDetail(MemberController.java:199) - loginMember = Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true)
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="member/memberDetail"; model={common={adminEmail=admin@spring.kh.com}, loginMember=Member(id=admin, password=$2a$10$P3mUTHC3JPZO2Ey82.TbK.fhC4t5UKK2eyJjz.NJHOHisKCDOPumu, name=관리자, gender=F, birthday=null, email=admin@naver.com, phone=01012345678, address=서울시 강남구, hobby=[등산, 독서], enrollDate=2021-04-20, enabled=true), org.springframework.validation.BindingResult.loginMember=org.springframework.validation.BeanPropertyBindingResult: 0 errors, modelAndView=ModelAndView [view="member/memberDetail"; model={}], org.springframework.validation.BindingResult.modelAndView=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:17:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:41:14]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:41:17]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2899 ms
[2021-04-23 11:41:17]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:41:20]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2426 ms
[2021-04-23 11:41:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:41:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:41:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:41:38]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:41:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:41:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:41:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:41:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:42:26]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:42:29]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3089 ms
[2021-04-23 11:42:29]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:42:32]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2573 ms
[2021-04-23 11:42:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:42:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:42:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:42:33]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:42:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:42:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:42:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:42:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:42:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:42:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/member/memberDetail.do
[2021-04-23 11:42:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:42:35]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:42:39]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=로그인 후 이용하세요., list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:42:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:43:50]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:43:53]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2725 ms
[2021-04-23 11:43:53]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:43:55]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2184 ms
[2021-04-23 11:43:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:43:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:43:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:43:58]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:43:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:43:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:43:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:43:58]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:44:15]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:44:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:44:51]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 11:44:54]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2940 ms
[2021-04-23 11:44:54]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 11:44:56]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 2422 ms
[2021-04-23 11:44:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:44:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 11:44:56]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:44:57]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 11:44:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:44:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 11:44:57]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/css/style.css
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/images/logo-spring.png
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 11:44:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:53:59]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 13:54:02]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2796 ms
[2021-04-23 13:54:02]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 13:54:04]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.aop.aspectj.AspectJPointcutAdvisor]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting 'identifier' at character position 0
* com.kh.spring.memo..*(..)
^

[2021-04-23 13:54:04]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.aop.aspectj.AspectJPointcutAdvisor]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting 'identifier' at character position 0
* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.aop.aspectj.AspectJPointcutAdvisor]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting 'identifier' at character position 0
* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:304)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:285)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 26 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.aop.aspectj.AspectJPointcutAdvisor]: Constructor threw exception; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting 'identifier' at character position 0
* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:184)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:117)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:300)
	... 42 more
Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting 'identifier' at character position 0
* com.kh.spring.memo..*(..)
^

	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:316)
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:294)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getMethodMatcher(AspectJExpressionPointcut.java:183)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.buildSafePointcut(AbstractAspectJAdvice.java:202)
	at org.springframework.aop.aspectj.AspectJPointcutAdvisor.<init>(AspectJPointcutAdvisor.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:172)
	... 44 more
[2021-04-23 13:54:46]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 13:54:50]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3749 ms
[2021-04-23 13:54:50]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 13:54:55]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4671 ms
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:54:59]INFO : com.kh.spring.HomeController.home(HomeController.java:25) - /요청!
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="forward:/index.jsp"; model={}]
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:54:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] {}String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] {}List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:55:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] {}List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] {}List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] {}List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:55:42]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] {}String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 13:55:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:55:44]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:56:31]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 13:56:35]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3569 ms
[2021-04-23 13:56:35]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 13:56:39]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4565 ms
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:56:40]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:56:41]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 13:56:41]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021)]}]
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:56:41]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:57:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:57:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 13:57:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:57:01]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 13:57:01]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:57:37]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 13:57:40]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3329 ms
[2021-04-23 13:57:40]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 13:57:45]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4429 ms
[2021-04-23 13:57:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:57:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 13:57:45]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:57:45]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:45) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 13:57:46]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:15) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 13:57:47]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:20) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 13:57:47]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:08:47]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:08:51]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3230 ms
[2021-04-23 14:08:51]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:08:52]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#730c8674' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#730c8674': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
[2021-04-23 14:08:52]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#730c8674' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#730c8674': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#730c8674' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#730c8674': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:676)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 26 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#730c8674': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 44 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 52 more
[2021-04-23 14:08:52]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:08:53]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#39fe2d99' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#39fe2d99': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
[2021-04-23 14:08:53]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#39fe2d99' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#39fe2d99': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.aop.aspectj.AspectJPointcutAdvisor#0': Cannot create inner bean '(inner bean)#39fe2d99' of type [org.springframework.aop.aspectj.AspectJMethodBeforeAdvice] while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#39fe2d99': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:676)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1108)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1081)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:504)
	... 34 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#39fe2d99': Cannot resolve reference to bean 'LoggerPointcut' while setting constructor argument; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:188)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 52 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'LoggerPointcut' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 60 more
[2021-04-23 14:09:34]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:09:37]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2981 ms
[2021-04-23 14:09:37]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:09:41]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4208 ms
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:15) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:22) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:15) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:22) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:15) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:09:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:22) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:27) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:27) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:09:43]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:27) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 14:09:43]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:19:04]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:19:08]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3095 ms
[2021-04-23 14:19:08]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:19:09]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

[2021-04-23 14:19:09]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:316)
	at org.aspectj.weaver.reflect.InternalUseOnlyPointcutParser.resolvePointcutExpression(InternalUseOnlyPointcutParser.java:36)
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getDeclaredPointcuts(Java15ReflectionBasedReferenceTypeDelegate.java:299)
	at org.aspectj.weaver.ReferenceType.getDeclaredPointcuts(ReferenceType.java:788)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:237)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:235)
	at org.aspectj.weaver.Iterators$4$1.hasNext(Iterators.java:213)
	at org.aspectj.weaver.Iterators$4.hasNext(Iterators.java:230)
	at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:722)
	at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:148)
	at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:189)
	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:313)
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:294)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:225)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:288)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:320)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	... 27 more
[2021-04-23 14:19:14]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:19:14]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

[2021-04-23 14:19:14]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:316)
	at org.aspectj.weaver.reflect.InternalUseOnlyPointcutParser.resolvePointcutExpression(InternalUseOnlyPointcutParser.java:36)
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getDeclaredPointcuts(Java15ReflectionBasedReferenceTypeDelegate.java:299)
	at org.aspectj.weaver.ReferenceType.getDeclaredPointcuts(ReferenceType.java:788)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:237)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:235)
	at org.aspectj.weaver.Iterators$4$1.hasNext(Iterators.java:213)
	at org.aspectj.weaver.Iterators$4.hasNext(Iterators.java:230)
	at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:722)
	at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:148)
	at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:189)
	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:313)
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:294)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:225)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:288)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:320)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	... 35 more
[2021-04-23 14:20:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:20:13]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3767 ms
[2021-04-23 14:20:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:20:15]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

[2021-04-23 14:20:15]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:316)
	at org.aspectj.weaver.reflect.InternalUseOnlyPointcutParser.resolvePointcutExpression(InternalUseOnlyPointcutParser.java:36)
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getDeclaredPointcuts(Java15ReflectionBasedReferenceTypeDelegate.java:299)
	at org.aspectj.weaver.ReferenceType.getDeclaredPointcuts(ReferenceType.java:788)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:237)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:235)
	at org.aspectj.weaver.Iterators$4$1.hasNext(Iterators.java:213)
	at org.aspectj.weaver.Iterators$4.hasNext(Iterators.java:230)
	at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:722)
	at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:148)
	at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:189)
	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:313)
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:294)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:225)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:288)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:320)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	... 27 more
[2021-04-23 14:20:15]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:20:15]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

[2021-04-23 14:20:15]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcContentNegotiationManager': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:830)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting ')' at character position 0
execution(* com.kh.spring.memo..*(..)
^

	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:316)
	at org.aspectj.weaver.reflect.InternalUseOnlyPointcutParser.resolvePointcutExpression(InternalUseOnlyPointcutParser.java:36)
	at org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate.getDeclaredPointcuts(Java15ReflectionBasedReferenceTypeDelegate.java:299)
	at org.aspectj.weaver.ReferenceType.getDeclaredPointcuts(ReferenceType.java:788)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:237)
	at org.aspectj.weaver.ResolvedType$PointcutGetter.get(ResolvedType.java:235)
	at org.aspectj.weaver.Iterators$4$1.hasNext(Iterators.java:213)
	at org.aspectj.weaver.Iterators$4.hasNext(Iterators.java:230)
	at org.aspectj.weaver.ResolvedType.findPointcut(ResolvedType.java:722)
	at org.aspectj.weaver.patterns.ReferencePointcut.resolveBindings(ReferencePointcut.java:148)
	at org.aspectj.weaver.patterns.Pointcut.resolve(Pointcut.java:189)
	at org.aspectj.weaver.tools.PointcutParser.resolvePointcutExpression(PointcutParser.java:313)
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:294)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:225)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:288)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:320)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	... 35 more
[2021-04-23 14:21:42]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:21:45]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2940 ms
[2021-04-23 14:21:45]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:21:49]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 3938 ms
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:21:49]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:21:50]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 14:21:50]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 14:21:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:22:08]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:32) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 14:22:08]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:45:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:45:13]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3153 ms
[2021-04-23 14:45:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:45:18]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4508 ms
[2021-04-23 14:45:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:45:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:45:18]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:45:18]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:45:18]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:45:19]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:46:05]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:46:08]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2980 ms
[2021-04-23 14:46:08]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:46:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4155 ms
[2021-04-23 14:46:21]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:46:25]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3643 ms
[2021-04-23 14:46:25]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:46:30]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4255 ms
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:46:30]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:41) - proxy = com.kh.spring.memo.model.service.MemoServiceImpl@75c9d6d1
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:46:30]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:46:31]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:45) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 14:46:31]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 14:48:28]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 14:48:32]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3750 ms
[2021-04-23 14:48:32]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 14:48:37]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4907 ms
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:48:37]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:41) - proxy = class com.sun.proxy.$Proxy43
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:48:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 14:48:38]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:45) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 14:48:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:04:51]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:04:54]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3474 ms
[2021-04-23 15:04:54]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:04:59]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memoController': Unsatisfied dependency expressed through field 'stopWatch'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2021-04-23 15:04:59]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memoController': Unsatisfied dependency expressed through field 'stopWatch'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:985)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4875)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5189)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1654)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1213)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 31 more
[2021-04-23 15:04:59]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:04:59]WARN : org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:557) - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memoController': Unsatisfied dependency expressed through field 'stopWatch'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2021-04-23 15:04:59]ERROR: org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:533) - Context initialization failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memoController': Unsatisfied dependency expressed through field 'stopWatch'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:701)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:667)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:715)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:529)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1144)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1091)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:763)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:544)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:616)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:831)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1634)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.util.StopWatch' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1654)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1213)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 39 more
[2021-04-23 15:06:25]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:06:29]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3608 ms
[2021-04-23 15:06:29]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:06:34]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4686 ms
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:37]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:38]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021)]}]
[2021-04-23 15:06:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:06:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.memo.controller.MemoController.memberEnroll(MemoController.java:88) - memo = Memo(no=0, memo=하위, password=1234, regDate=null)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memberEnroll(Memo,RedirectAttributes)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:06:42]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021)]
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021)]}]
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:06:42]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:09:44]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:09:47]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3098 ms
[2021-04-23 15:09:47]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:09:51]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4357 ms
[2021-04-23 15:09:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:09:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:09:51]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:52]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:52]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:53]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021)]
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021)]}]
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:09:53]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=하위1, password=1234, regDate=null)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:09:59]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021)]
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021)]}]
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:09:59]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:11:07]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:11:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2800 ms
[2021-04-23 15:11:10]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:11:14]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 3956 ms
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:32]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:32]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:33]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021)]
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021)]}]
[2021-04-23 15:11:33]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:11:34]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=하위12, password=1234, regDate=null)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:11:39]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021)]
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021)]}]
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:11:39]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:14:08]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:14:10]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 2752 ms
[2021-04-23 15:14:11]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:14:15]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4166 ms
[2021-04-23 15:14:36]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:14:36]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:14:36]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=하위5, password=1234, regDate=null)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:14:37]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:14:38]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021)]
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021)]}]
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:14:38]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:16:06]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:16:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3105 ms
[2021-04-23 15:16:09]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:16:13]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 4371 ms
[2021-04-23 15:16:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:16:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:16:13]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:14]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:14]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:15]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021)]
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021)]}]
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:16:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=1, password=1, regDate=null)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:16:26]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021)]
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021)]}]
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:16:26]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:20:05]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:270) - Root WebApplicationContext: initialization started
[2021-04-23 15:20:09]INFO : org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306) - Root WebApplicationContext initialized in 3859 ms
[2021-04-23 15:20:09]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'appServlet'
[2021-04-23 15:20:14]INFO : org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 5420 ms
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:20:15]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:20:15]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:20:16]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021)]
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021)]}]
[2021-04-23 15:20:16]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/css/style.css
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/resources/images/logo-spring.png
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = null
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:20:17]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/insertMemo.do
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.memo.controller.MemoController.memoEnroll(MemoController.java:88) - memo = Memo(no=0, memo=145, password=1234, regDate=null)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.dao.MemoDao.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] int com.kh.spring.memo.model.service.MemoService.insertMemo(Memo)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoEnroll(Memo,RedirectAttributes)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="redirect:/memo/memo.do"; model={}]
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:28) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:29) - /spring/memo/memo.do
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.preHandle(LoggerInterceptor.java:30) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:53) - proxy = class com.sun.proxy.$Proxy44
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:34) - [Before] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.beforeAdvice(LoggerAspect.java:26) - [BBBefore]List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.dao.MemoDao.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] List com.kh.spring.memo.model.service.MemoService.selectMemoList()
[2021-04-23 15:28:29]DEBUG: com.kh.spring.memo.controller.MemoController.memoList(MemoController.java:57) - list = [Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021)]
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.aop.LoggerAspect.aroundAdvice(LoggerAspect.java:39) - [After] String com.kh.spring.memo.controller.MemoController.memoList(Model)
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:40) - ==================================================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:41) - mav = ModelAndView [view="memo/memo"; model={msg=메모 등록 성공!, list=[Memo(no=1, memo=안녕하세요, 봄날입니다, password=1234, regDate=Fri Apr 23 10:09:32 KST 2021), Memo(no=2, memo=123, password=1234, regDate=Fri Apr 23 11:02:12 KST 2021), Memo(no=3, memo=소여니, password=1234, regDate=Fri Apr 23 11:12:42 KST 2021), Memo(no=5, memo=하위, password=1234, regDate=Fri Apr 23 13:57:46 KST 2021), Memo(no=6, memo=하위, password=1234, regDate=Fri Apr 23 15:06:42 KST 2021), Memo(no=7, memo=하위1, password=1234, regDate=Fri Apr 23 15:09:59 KST 2021), Memo(no=8, memo=하위12, password=1234, regDate=Fri Apr 23 15:11:39 KST 2021), Memo(no=9, memo=하위5, password=1234, regDate=Fri Apr 23 15:14:38 KST 2021), Memo(no=10, memo=1, password=1   , regDate=Fri Apr 23 15:16:26 KST 2021), Memo(no=11, memo=145, password=1234, regDate=Fri Apr 23 15:28:29 KST 2021)]}]
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.postHandle(LoggerInterceptor.java:42) - ========================== view ====================
[2021-04-23 15:28:29]DEBUG: com.kh.spring.common.interceptor.LoggerInterceptor.afterCompletion(LoggerInterceptor.java:50) - _________________________________________________

