package com.kh.spring.memo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.kh.spring.memo.model.service.MemoService;
import com.kh.spring.memo.model.vo.Memo;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/memo")
public class MemoController {
	
	@Autowired
	private MemoService memoService;

	@GetMapping("/memo.do") //2
	public String memoList(Model model) {
		List<Memo> list;
		try {
			list = memoService.selectMemoList();
		}catch(Exception e){
			//1. 로깅작업
			log.error(e.getMessage(), e);
			//2. 다시 spring container에 던질 것.
			throw e;
		}
		model.addAttribute("list", list);
		return "memo/memo";
	}
	
	@PostMapping("/insertMemo.do")
	public String memberEnroll(Memo memo, RedirectAttributes redirectAttr) {
		log.info("memo = {}", memo);
		try {			
			//1. 업무로직
			int result = memoService.insertMemo(memo);
			String msg = result > 0 ? "메모 등록 성공!" : "메모 등록 실패!"; 
			//2. 사용자피드백 준비 및 리다이렉트
			redirectAttr.addFlashAttribute("msg",msg);			
		}catch(Exception e) {
			//1. 로깅작업
			log.error(e.getMessage(), e);
			//2. 다시 spring container에 던질 것.
			throw e;
		}
		return "redirect:/memo/memo.do";
	}
}
